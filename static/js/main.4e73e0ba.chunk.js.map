{"version":3,"sources":["utils/cache.js","app-bundles/auth-bundle.js","app-bundles/modal-window-bundle.js","app-bundles/new-order-bundle.js","app-bundles/order-status-bundle.js","utils/classnames.js","app-components/order-details.js","app-components/order-status/order-list-item.js","app-components/login.js","app-components/new-order.js","app-components/spinners/chase-spinner.js","app-components/order-status/page.js","app-bundles/route-bundle.js","app-bundles/index.js","app-components/modal.js","app-components/main.js","App.js","webpack:///./src/index.js?b635"],"names":["getConfiguredCache","maxAge","version","pkg","name","bundle","getReducer","initialData","planetApiKey","state","type","payload","Object","assign","selectAuthIsLoggedIn","auth","selectAuthPlanetApiKey","doAuthLogout","dispatch","doAuthSetPlanetApiKey","key","persistActions","content","props","size","doModalOpen","doModalClose","selectModalContent","modal","selectModalProps","selectModalSize","itemIds","itemType","productBundle","workspace","collection","selectOrderName","order","selectOrderItemIds","selectOrderItemType","selectOrderProductBundle","selectOrderWorkspace","selectOrderCollection","selectOrderPayload","createSelector","products","item_ids","item_type","product_bundle","delivery","google_earth_engine","project","doOrderSubmit","store","apiKey","console","log","fetch","method","mode","headers","Headers","Authorization","btoa","body","JSON","stringify","then","response","json","data","doStatusFetch","_links","orders","is_fetching","selectStatusIsFetching","status","selectStatusOrders","selectStatusState","selectStatusOrdersByRoute","params","orderId","forEach","id","catch","err","init","classnames","opts","keys","map","join","OrderDetails","connect","statusState","createdDate","format","Date","created_on","modifiedDate","last_modified","className","onClick","data-dismiss","aria-label","aria-hidden","last_message","error_hints","length","OrderListItem","stateIconClass","mdi","orderDate","formatDistanceToNowStrict","title","Login","authPlanetApiKey","useState","setApiKey","value","onChange","e","target","planetItemTypes","PSScene3Band","PSScene4Band","PSOrthoTile","REOrthoTile","REScene","SkySatScene","SkySatCollect","SkySatVideo","Landsat8L1G","Sentinel2L1C","NewOrder","setName","setWorkspace","setCollection","setItemType","bundles","setBundles","productIds","setProductIds","placeholder","href","rel","multiple","options","selectedOptions","i","l","selected","push","bundleName","rows","replace","split","ChaseSpinner","OrderStatus","statusOrders","statusIsFetching","handleLogin","style","display","createRouteBundle","composeBundles","createCacheBundle","cacheFn","cache","set","createUrlBundle","authBundle","modalWindowBundle","newOrderBundle","orderStatusBundle","routeBundle","ModalContent","modalContent","modalProps","modalSize","modalCls","backgroundColor","opacity","Main","doUpdateUrl","Route","route","getNavHelper","App","this","React","Component","window","localStorage","removeItem","getAll","getStore","ReactDOM","render","document","getElementById"],"mappings":"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AqCiC,EAAM5B,OAAtD,UACE,mBAAG4F,UAAWS,IACd,sBAAMT,UAAU,YAAYC,QATd,WAClB7E,EAAYmE,EAAc,CAAEX,QAAS5C,EAAM8C,IAAM,OAQ7C,SACG9C,EAAMjC,gB,OCaF+G,EA5CDtB,YACZ,wBACA,eACA,gBACA,0BACA,YAKO,IAJL1E,EAII,EAJJA,sBACAO,EAGI,EAHJA,aACA6C,EAEI,EAFJA,cACkBnD,EACd,EADJgG,iBACI,EACwBC,mBAAS,IADjC,mBACG/D,EADH,KACWgE,EADX,KASJ,OACE,qBAAKjB,UAAU,gBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,iFAEA,sBAAKA,UAAU,aAAf,UACE,uBAAOA,UAAU,aAAjB,4BACA,uBACEA,UAAU,eACV3F,KAAK,OACL6G,MAAOjE,EACPkE,SAAU,SAACC,GACTH,EAAUG,EAAEC,OAAOH,aAIzB,wBAAQjB,QAtBD,WACPhD,GAAUA,IAAWlC,GAAKD,EAAsBmC,GACpD5B,IACA6C,KAmB2B8B,UAAU,kBAAjC,0BCnCJsB,EAAkB,CACtBC,aAAc,CACZ,WACA,cACA,kBACA,eACA,iBACA,oBACA,wBACA,wBACA,qBACA,qBACA,YACA,aACA,MACA,OACA,SACA,cAEFC,aAAc,CACZ,WACA,cACA,kBACA,cACA,eACA,iBACA,oBACA,yBACA,wBACA,6BACA,wBACA,6BACA,sBACA,qBACA,0BACA,qBACA,0BACA,YACA,aACA,MACA,QAEFC,YAAa,CACX,WACA,cACA,kBACA,cACA,kBACA,cACA,eACA,SACA,aACA,MACA,QAEFC,YAAa,CACX,WACA,cACA,eACA,MACA,SACA,cAEFC,QAAS,CACP,oBACA,yBACA,oBACA,yBACA,oBACA,yBACA,oBACA,yBACA,oBACA,yBACA,qBACA,0BACA,qBACA,qBACA,YACA,UAEFC,YAAa,CACX,iBACA,oBACA,wBACA,qBACA,qBACA,sBACA,4BACA,gCACA,qBACA,wBACA,4BACA,yBACA,0BACA,iBACA,oBACA,qBACA,sBACA,qBACA,wBACA,yBACA,0BACA,qBACA,yBACA,0BACA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","file":"static/js/main.4e73e0ba.chunk.js","sourcesContent":["import { getConfiguredCache } from 'money-clip'\nimport pkg from \"../../package.json\";\n\nexport default getConfiguredCache({\n  maxAge: 1000 * 60 * 60 * 24,\n  version: `${pkg.name}-${pkg.version}`\n});","const bundle = {\n  name: \"auth\",\n\n  getReducer: () => {\n    const initialData = {\n      planetApiKey: null,\n    };\n\n    return (state = initialData, { type, payload }) => {\n      switch (type) {\n        case \"AUTH_UPDATE\":\n        case \"AUTH_LOGOUT\":\n          return Object.assign({}, state, payload);\n        default:\n          return state;\n      }\n    };\n  },\n\n  selectAuthIsLoggedIn: (state) => {\n    return !!state.auth.planetApiKey;\n  },\n\n  selectAuthPlanetApiKey: (state) => {\n    return state.auth.planetApiKey || \"\";\n  },\n\n  doAuthLogout: () => ({ dispatch }) => {\n    dispatch({\n      type: \"AUTH_LOGOUT\",\n      payload: {\n        planetApiKey: null,\n      },\n    });\n  },\n\n  doAuthSetPlanetApiKey: (key) => ({ dispatch }) => {\n    dispatch({\n      type: \"AUTH_UPDATE\",\n      payload: {\n        planetApiKey: key,\n      },\n    });\n  },\n\n  persistActions: [\"AUTH_UPDATE\"],\n};\n\nexport default bundle;\n","const bundle = {\n  name: \"modal\",\n  getReducer: () => {\n    const initialData = {\n      content: null,\n      props: null,\n      size: null,\n    };\n\n    return (state = initialData, { type, payload }) => {\n      if (type === \"MODAL_UPDATED\") {\n        return Object.assign({}, state, payload);\n      }\n      return state;\n    };\n  },\n  doModalOpen: (content, props, size) => ({ dispatch }) => {\n    dispatch({\n      type: \"MODAL_UPDATED\",\n      payload: {\n        content: content,\n        props: props,\n      },\n    });\n  },\n  doModalClose: () => ({ dispatch }) => {\n    dispatch({\n      type: \"MODAL_UPDATED\",\n      payload: {\n        content: null,\n        props: null,\n      },\n    });\n  },\n  selectModalContent: (state) => {\n    return state.modal.content;\n  },\n  selectModalProps: (state) => {\n    return state.modal.props;\n  },\n  selectModalSize: (state) => {\n    return state.modal.size;\n  },\n};\n\nexport default bundle;\n","import { createSelector } from \"redux-bundler\";\n\nconst bundle = {\n  name: \"order\",\n\n  getReducer: () => {\n    const initialData = {\n      name: \"\",\n      itemIds: [],\n      itemType: \"PSScene4Band\",\n      productBundle: \"PSScene4Band\",\n      workspace: \"\",\n      collection: \"\",\n    };\n\n    return (state = initialData, { type, payload }) => {\n      switch (type) {\n        case \"ORDERS_SET_STATE\":\n        case \"ORDER_UPDATE\":\n          return Object.assign({}, state, payload);\n        default:\n          return state;\n      }\n    };\n  },\n\n  selectOrderName: (state) => {\n    return state.order.name;\n  },\n\n  selectOrderItemIds: (state) => {\n    return state.order.itemIds;\n  },\n\n  selectOrderItemType: (state) => {\n    return state.order.itemType;\n  },\n\n  selectOrderProductBundle: (state) => {\n    return state.order.productBundle;\n  },\n\n  selectOrderWorkspace: (state) => {\n    return state.order.workspace;\n  },\n\n  selectOrderCollection: (state) => {\n    return state.order.collection;\n  },\n\n  selectOrderPayload: createSelector(\n    \"selectOrderName\",\n    \"selectOrderItemType\",\n    \"selectOrderItemIds\",\n    \"selectOrderProductBundle\",\n    \"selectOrderWorkspace\",\n    \"selectOrderCollection\",\n    (name, itemIds, itemType, productBundle, workspace, collection) => {\n      return {\n        name: name,\n        products: [\n          {\n            item_ids: itemIds,\n            item_type: itemType,\n            product_bundle: productBundle,\n          },\n        ],\n        delivery: {\n          google_earth_engine: {\n            project: workspace,\n            collection: collection,\n          },\n        },\n      };\n    }\n  ),\n\n  doOrderSubmit: (payload) => ({ dispatch, store }) => {\n    const apiKey = store.selectAuthPlanetApiKey();\n    console.log(\"posting\", payload);\n    fetch(\"https://api.planet.com/compute/ops/orders/v2\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: new Headers({\n        \"content-type\": \"application/json\",\n        Authorization: `Basic ${btoa(`${apiKey}:`)}`,\n      }),\n      body: JSON.stringify(payload),\n    })\n      .then((response) => {\n        console.log(\"got something back\");\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"data: \", data);\n        store.doStatusFetch();\n      });\n  },\n};\n\nexport default bundle;\n","import { createSelector } from \"redux-bundler\";\n\nconst bundle = {\n  name: \"status\",\n\n  getReducer: () => {\n    const initialData = {\n      _links: [],\n      orders: [],\n      is_fetching: false,\n    };\n\n    return (state = initialData, { type, payload }) => {\n      switch (type) {\n        case \"STATUS_UPDATE\":\n          return Object.assign({}, state, payload);\n        case \"AUTH_LOGOUT\":\n          return Object.assign({}, initialData);\n        default:\n          return state;\n      }\n    };\n  },\n\n  selectStatusIsFetching: (state) => {\n    return state.status.is_fetching;\n  },\n\n  selectStatusOrders: (state) => {\n    return state.status.orders;\n  },\n\n  selectStatusState: (state) => {\n    return state.status;\n  },\n\n  selectStatusOrdersByRoute: createSelector(\n    \"selectRouteParams\",\n    \"selectStatusState\",\n    (params, orders) => {\n      if (!params || !params.orderId) return null;\n      return orders[params.orderId];\n    }\n  ),\n\n  doStatusFetch: () => ({ dispatch, store }) => {\n    dispatch({\n      type: \"STATUS_UPDATE\",\n      payload: {\n        is_fetching: true,\n      },\n    });\n    const apiKey = store.selectAuthPlanetApiKey();\n    if (apiKey) {\n      fetch(\"https://api.planet.com/compute/ops/orders/v2\", {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          Authorization: `Basic ${btoa(`${apiKey}:`)}`,\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          data.orders.forEach((order) => {\n            data[order.id] = order;\n          });\n          data.is_fetching = false;\n          dispatch({\n            type: \"STATUS_UPDATE\",\n            payload: data,\n          });\n        })\n        .catch((err) => {\n          console.log(\"wtf\", err);\n        });\n    }\n  },\n\n  init: (store) => {\n    // window.setInterval(store.doStatusFetch, 5000);\n    store.doStatusFetch();\n  },\n};\n\nexport default bundle;\n","const classnames = (opts) => {\n  return Object.keys(opts)\n    .map((key) => {\n      return !!opts[key] ? key : \"\";\n    })\n    .join(\" \");\n};\n\nexport default classnames;\n","import React from \"react\";\nimport { connect } from \"redux-bundler-react\";\nimport { format } from \"date-fns\";\n\nconst OrderDetails = connect(\n  \"doModalClose\",\n  \"selectStatusState\",\n  ({ doModalClose, statusState: orders, orderId }) => {\n    const order = orders[orderId];\n    if (!order) return null;\n\n    const createdDate = format(\n      new Date(order.created_on),\n      \"dd-MMM-yyyy HH:mm:ss\"\n    );\n\n    const modifiedDate = format(\n      new Date(order.last_modified),\n      \"dd-MMM-yyyy HH:mm:ss\"\n    );\n    return (\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h4 className=\"modal-title\">{order.name}</h4>\n          <button\n            onClick={doModalClose}\n            type=\"button\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <h6 className=\"card-subtitle mb-2 text-muted\">\n            <span className=\"float-right\">{createdDate}</span>\n            Created:\n          </h6>\n          {order.created_on === order.last_modified ? null : (\n            <h6 className=\"card-subtitle mb-2 text-muted\">\n              <span className=\"float-right\">{modifiedDate}</span>\n              Last Modified:\n            </h6>\n          )}\n          <p>State: {order.state}</p>\n          <div className=\"card-text\">{order.last_message}</div>\n\n          <div className=\"hidden\">\n            {!order.error_hints.length ? (\n              <small>No hints available</small>\n            ) : (\n              <small>{order.error_hints}</small>\n            )}\n          </div>\n\n          <p>Delivery Information</p>\n          <div>\n            <pre className=\"code\">\n              {JSON.stringify(order.delivery, null, 2)}\n            </pre>\n          </div>\n\n          <p>Products Requested</p>\n          <div>\n            <pre>{JSON.stringify(order.products, null, 2)}</pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default OrderDetails;\n","import React from \"react\";\nimport { connect } from \"redux-bundler-react\";\nimport classnames from \"../../utils/classnames\";\nimport { formatDistanceToNowStrict } from \"date-fns\";\nimport OrderDetails from \"../order-details\";\n\nconst OrderListItem = connect(\"doModalOpen\", ({ doModalOpen, order }) => {\n  const stateIconClass = classnames({\n    \"mr-2\": true,\n    mdi: true,\n    \"mdi-file-clock\": order.state === \"queued\",\n    \"mdi-file-cog\": order.state === \"running\",\n    \"mdi-file-alert\": order.state === \"failed\",\n    \"mdi-file-check\": order.state === \"success\",\n    \"mdi-file-powerpoint\": order.state === \"partial\",\n    \"mdi-file-cancel\": order.state === \"cancelled\",\n    \"text-primary\": order.state === \"queued\" || order.state === \"running\",\n    \"text-success\": order.state === \"success\" || order.state === \"partial\",\n    \"text-danger\": order.state === \"failed\",\n    \"text-light\": order.state === \"cancelled\",\n  });\n\n  const orderDate = formatDistanceToNowStrict(new Date(order.created_on));\n\n  const showDetails = () => {\n    doModalOpen(OrderDetails, { orderId: order.id }, \"lg\");\n  };\n\n  return (\n    <li className=\"list-group-item\">\n      <span className=\"float-right\">{`created ${orderDate} ago`}</span>\n      <span title={`${order.name}, delivery status: ${order.state}`}>\n        <i className={stateIconClass}></i>\n        <span className=\"text-link\" onClick={showDetails}>\n          {order.name}\n        </span>\n      </span>\n    </li>\n  );\n});\n\nexport default OrderListItem;\n","import React, { useState } from \"react\";\nimport { connect } from \"redux-bundler-react\";\n\nconst Login = connect(\n  \"doAuthSetPlanetApiKey\",\n  \"doModalClose\",\n  \"doStatusFetch\",\n  \"selectAuthPlanetApiKey\",\n  ({\n    doAuthSetPlanetApiKey,\n    doModalClose,\n    doStatusFetch,\n    authPlanetApiKey: key,\n  }) => {\n    const [apiKey, setApiKey] = useState(\"\");\n\n    const save = () => {\n      if (apiKey && apiKey !== key) doAuthSetPlanetApiKey(apiKey);\n      doModalClose();\n      doStatusFetch();\n    };\n\n    return (\n      <div className=\"modal-content\">\n        <div className=\"modal-body\">\n          <p>Enter credentials here for the Planet Orders API</p>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Planet API Key</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              value={apiKey}\n              onChange={(e) => {\n                setApiKey(e.target.value);\n              }}\n            ></input>\n          </div>\n          <button onClick={save} className=\"btn btn-primary\">\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { connect } from \"redux-bundler-react\";\n\nconst planetItemTypes = {\n  PSScene3Band: [\n    \"analytic\",\n    \"analytic_dn\",\n    \"analytic_dn_xml\",\n    \"analytic_xml\",\n    \"basic_analytic\",\n    \"basic_analytic_dn\",\n    \"basic_analytic_dn_rpc\",\n    \"basic_analytic_dn_xml\",\n    \"basic_analytic_rpc\",\n    \"basic_analytic_xml\",\n    \"basic_udm\",\n    \"basic_udm2\",\n    \"udm\",\n    \"udm2\",\n    \"visual\",\n    \"visual_xml\",\n  ],\n  PSScene4Band: [\n    \"analytic\",\n    \"analytic_dn\",\n    \"analytic_dn_xml\",\n    \"analytic_sr\",\n    \"analytic_xml\",\n    \"basic_analytic\",\n    \"basic_analytic_dn\",\n    \"basic_analytic_dn_nitf\",\n    \"basic_analytic_dn_rpc\",\n    \"basic_analytic_dn_rpc_nitf\",\n    \"basic_analytic_dn_xml\",\n    \"basic_analytic_dn_xml_nitf\",\n    \"basic_analytic_nitf\",\n    \"basic_analytic_rpc\",\n    \"basic_analytic_rpc_nitf\",\n    \"basic_analytic_xml\",\n    \"basic_analytic_xml_nitf\",\n    \"basic_udm\",\n    \"basic_udm2\",\n    \"udm\",\n    \"udm2\",\n  ],\n  PSOrthoTile: [\n    \"analytic\",\n    \"analytic_5b\",\n    \"analytic_5b_xml\",\n    \"analytic_dn\",\n    \"analytic_dn_xml\",\n    \"analytic_sr\",\n    \"analytic_xml\",\n    \"visual\",\n    \"visual_xml\",\n    \"udm\",\n    \"udm2\",\n  ],\n  REOrthoTile: [\n    \"analytic\",\n    \"analytic_sr\",\n    \"analytic_xml\",\n    \"udm\",\n    \"visual\",\n    \"visual_xml\",\n  ],\n  REScene: [\n    \"basic_analytic_b1\",\n    \"basic_analytic_b1_nitf\",\n    \"basic_analytic_b2\",\n    \"basic_analytic_b2_nitf\",\n    \"basic_analytic_b3\",\n    \"basic_analytic_b3_nitf\",\n    \"basic_analytic_b4\",\n    \"basic_analytic_b4_nitf\",\n    \"basic_analytic_b5\",\n    \"basic_analytic_b5_nitf\",\n    \"basic_analytic_xml\",\n    \"basic_analytic_xml_nitf\",\n    \"basic_analytic_sci\",\n    \"basic_analytic_rpc\",\n    \"basic_udm\",\n    \"browse\",\n  ],\n  SkySatScene: [\n    \"basic_analytic\",\n    \"basic_analytic_dn\",\n    \"basic_analytic_dn_rpc\",\n    \"basic_analytic_rpc\",\n    \"basic_analytic_udm\",\n    \"basic_analytic_udm2\",\n    \"basic_l1a_panchromatic_dn\",\n    \"basic_l1a_panchromatic_dn_rpc\",\n    \"basic_panchromatic\",\n    \"basic_panchromatic_dn\",\n    \"basic_panchromatic_dn_rpc\",\n    \"basic_panchromatic_rpc\",\n    \"basic_panchromatic_udm2\",\n    \"ortho_analytic\",\n    \"ortho_analytic_dn\",\n    \"ortho_analytic_udm\",\n    \"ortho_analytic_udm2\",\n    \"ortho_panchromatic\",\n    \"ortho_panchromatic_dn\",\n    \"ortho_panchromatic_udm\",\n    \"ortho_panchromatic_udm2\",\n    \"ortho_pansharpened\",\n    \"ortho_pansharpened_udm\",\n    \"ortho_pansharpened_udm2\",\n    \"ortho_visual\",\n  ],\n  SkySatCollect: [\n    \"ortho_analytic\",\n    \"ortho_analytic_dn\",\n    \"ortho_analytic_udm\",\n    \"ortho_analytic_udm2\",\n    \"ortho_panchromatic\",\n    \"ortho_panchromatic_dn\",\n    \"ortho_panchromatic_udm\",\n    \"ortho_panchromatic_udm2\",\n    \"ortho_pansharpened\",\n    \"ortho_pansharpened_udm\",\n    \"ortho_pansharpened_udm2\",\n    \"ortho_visual\",\n  ],\n  SkySatVideo: [\"video_file\", \"video_frames\", \"video_metadata\"],\n  Landsat8L1G: [\n    \"analytic_b1\",\n    \"analytic_b2\",\n    \"analytic_b3\",\n    \"analytic_b4\",\n    \"analytic_b5\",\n    \"analytic_b6\",\n    \"analytic_b7\",\n    \"analytic_b8\",\n    \"analytic_b9\",\n    \"analytic_b10\",\n    \"analytic_b11\",\n    \"analytic_bqa\",\n    \"metadata_txt\",\n    \"visual\",\n  ],\n  Sentinel2L1C: [\n    \"analytic_b1\",\n    \"analytic_b2\",\n    \"analytic_b3\",\n    \"analytic_b4\",\n    \"analytic_b5\",\n    \"analytic_b6\",\n    \"analytic_b7\",\n    \"analytic_b8\",\n    \"analytic_b8a\",\n    \"analytic_b9\",\n    \"analytic_b10\",\n    \"analytic_b11\",\n    \"analytic_b12\",\n    \"metadata_aux\",\n    \"visual\",\n  ],\n};\n\nconst NewOrder = connect(\n  \"doModalClose\",\n  \"doOrderSubmit\",\n  ({ doModalClose, doOrderSubmit }) => {\n    const [name, setName] = useState(\"\");\n    const [workspace, setWorkspace] = useState(\"\");\n    const [collection, setCollection] = useState(\"\");\n    const [itemType, setItemType] = useState(\"\");\n    const [bundles, setBundles] = useState([]);\n    const [productIds, setProductIds] = useState(\"\");\n\n    const save = () => {\n      const item_ids = productIds.replace(\" \", \"\").split(\",\");\n      const order = {\n        name: name,\n        products: bundles.map((productBundle) => {\n          return {\n            item_ids: item_ids,\n            item_type: itemType,\n            product_bundle: productBundle,\n          };\n        }),\n        delivery: {\n          google_earth_engine: {\n            project: workspace,\n            collection: collection,\n          },\n        },\n      };\n      console.log(\"saving\", order);\n      doOrderSubmit(order);\n    };\n\n    return (\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h4 className=\"modal-title\">New Order</h4>\n          <button\n            onClick={doModalClose}\n            type=\"button\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"form-group\">\n            <label>Order Name</label>\n            <input\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter name\"\n            />\n            <small className=\"form-text text-muted\">\n              Name the order so you can keep track of it\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Google Earth Engine Project</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              value={workspace}\n              onChange={(e) => {\n                setWorkspace(e.target.value);\n              }}\n              placeholder=\"Enter GEE project name\"\n            ></input>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Google Earth Engine Image Collection</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              value={collection}\n              onChange={(e) => {\n                setCollection(e.target.value);\n              }}\n              placeholder=\"Enter GEE image collection\"\n            ></input>\n            <small className=\"form-text text-muted\">\n              The Image Collection must already exist in Earth Engine\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <span className=\"float-right\">\n              <a\n                href=\"https://developers.planet.com/docs/data/items-assets/\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                See Details\n              </a>\n            </span>\n            <label>Planet Item Type </label>\n            <select\n              className=\"form-control\"\n              value={itemType}\n              onChange={(e) => {\n                setItemType(e.target.value);\n                setBundles([]);\n              }}\n            >\n              <option value=\"\">Select an item type...</option>\n              {Object.keys(planetItemTypes).map((key) => {\n                return (\n                  <option key={key} value={key}>\n                    {key}\n                  </option>\n                );\n              })}\n            </select>\n            <small className=\"form-text text-muted\">\n              ** All item types are shown here, but you might not have access to\n              all through your API key\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Planet Product Bundle</label>\n            <select\n              multiple={true}\n              className=\"form-control\"\n              value={bundles}\n              onChange={(e) => {\n                const options = e.target.options;\n                const selectedOptions = [];\n                for (var i = 0, l = options.length; i < l; i++) {\n                  if (options[i].selected) {\n                    selectedOptions.push(options[i].value);\n                  }\n                }\n                setBundles(selectedOptions);\n              }}\n            >\n              {!itemType ? (\n                <option value=\"\">\n                  Select an Item Type to see bundle options\n                </option>\n              ) : (\n                planetItemTypes[itemType].map((bundleName) => {\n                  return (\n                    <option key={bundleName} value={bundleName}>\n                      {bundleName}\n                    </option>\n                  );\n                })\n              )}\n            </select>\n            <small className=\"form-text text-muted\">\n              You may select more than one bundle\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Product IDs</label>\n            <textarea\n              className=\"form-control\"\n              rows=\"5\"\n              value={productIds}\n              onChange={(e) => {\n                setProductIds(e.target.value);\n              }}\n            ></textarea>\n            <small className=\"form-text text-muted\">\n              Product IDs should be comma delimited\n            </small>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <button\n            onClick={doModalClose}\n            className=\"btn btn-sm btn-outline-primary\"\n          >\n            Cancel\n          </button>\n          <button onClick={save} className=\"btn btn-sm btn-primary\">\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default NewOrder;\n","import React from \"react\";\nimport \"./chase-spinner.css\";\n\nconst ChaseSpinner = () => {\n  return (\n    <div className=\"sk-chase\">\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n      <div className=\"sk-chase-dot\"></div>\n    </div>\n  );\n};\n\nexport default ChaseSpinner;\n","import React from \"react\";\nimport { connect } from \"redux-bundler-react\";\nimport OrderListItem from \"./order-list-item\";\nimport Login from \"../login\";\nimport NewOrder from \"../new-order\";\nimport ChaseSpinner from \"../spinners/chase-spinner\";\n\nconst OrderStatus = connect(\n  \"doAuthLogout\",\n  \"doModalOpen\",\n  \"doStatusFetch\",\n  \"selectAuthPlanetApiKey\",\n  \"selectStatusOrders\",\n  \"selectStatusIsFetching\",\n  ({\n    doAuthLogout,\n    doModalOpen,\n    doStatusFetch,\n    authPlanetApiKey: key,\n    statusOrders,\n    statusIsFetching,\n  }) => {\n    const handleLogin = () => {\n      doModalOpen(Login);\n    };\n\n    const handleNew = () => {\n      doModalOpen(NewOrder);\n    };\n\n    return (\n      <div className=\"container\">\n        <div className=\"clearfix\">\n          <div className=\"float-right\">\n            {!!key ? (\n              <>\n                <button onClick={doAuthLogout} className=\"btn btn-link\">\n                  Clear API Key\n                </button>\n                <button onClick={handleLogin} className=\"btn btn-link\">\n                  Edit API Key\n                </button>\n              </>\n            ) : (\n              <button onClick={handleLogin} className=\"btn btn-link\">\n                Enter API Key\n              </button>\n            )}\n          </div>\n        </div>\n\n        <div className=\"card\">\n          <div className=\"card-body\">\n            {!!key ? (\n              <div>\n                <div className=\"mb-2 clearfix\">\n                  <div className=\"float-right\">\n                    <button\n                      onClick={handleNew}\n                      className=\"btn btn-sm btn-primary mr-2\"\n                    >\n                      <i className=\"mdi mdi-plus mr-2\"></i>New Order\n                    </button>\n                    {statusIsFetching ? (\n                      <button className=\"btn btn-sm btn-primary mr-2\">\n                        <span\n                          className=\"mr-2\"\n                          style={{ display: \"inline-block\" }}\n                        >\n                          <ChaseSpinner />{\" \"}\n                        </span>\n                        Refresh\n                      </button>\n                    ) : (\n                      <button\n                        onClick={doStatusFetch}\n                        className=\"btn btn-sm btn-primary mr-2\"\n                      >\n                        <i className=\"mdi mdi-refresh mr-2\"></i>Refresh\n                      </button>\n                    )}\n                  </div>\n                </div>\n                <ul className=\"list-group\">\n                  {statusOrders.map((order, i) => {\n                    return <OrderListItem key={i} order={order} />;\n                  })}\n                </ul>\n              </div>\n            ) : (\n              <div>Please enter your API key to get started.</div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default OrderStatus;\n","import { createRouteBundle } from \"redux-bundler\";\nimport OrderStatus from \"../app-components/order-status/page\";\n\nexport default createRouteBundle({\n  \"\": OrderStatus,\n  \"/\": OrderStatus,\n  \"*\": OrderStatus,\n});\n","import {\n  composeBundles,\n  createCacheBundle,\n  createUrlBundle,\n} from \"redux-bundler\";\nimport cache from \"../utils/cache\";\nimport authBundle from \"./auth-bundle\";\nimport modalWindowBundle from \"./modal-window-bundle\";\nimport newOrderBundle from \"./new-order-bundle\";\nimport orderStatusBundle from \"./order-status-bundle\";\nimport routeBundle from \"./route-bundle\";\n\nexport default composeBundles(\n  createCacheBundle({\n    cacheFn: cache.set,\n  }),\n  createUrlBundle(),\n  authBundle,\n  modalWindowBundle,\n  newOrderBundle,\n  orderStatusBundle,\n  routeBundle\n);\n","import React from \"react\";\nimport { connect } from \"redux-bundler-react\";\nimport classnames from \"../utils/classnames\";\n\nexport default connect(\n  \"doModalClose\",\n  \"selectModalContent\",\n  \"selectModalProps\",\n  \"selectModalSize\",\n  ({ modalContent: ModalContent, doModalClose, modalProps, modalSize }) => {\n    if (!ModalContent) return null;\n    const modalCls = classnames({\n      \"modal-dialog\": true,\n      \"modal-dialog-scrollable\": true,\n      \"modal-dialog-centered\": true,\n      \"modal-sm\": modalSize === \"sm\",\n      \"modal-lg\": modalSize === \"lg\",\n      \"modal-xl\": modalSize === \"xl\",\n    });\n    return (\n      <>\n        <div\n          onClick={doModalClose}\n          className=\"modal fade show\"\n          style={{ display: \"block\", backgroundColor: \"#ccc\", opacity: 0.5 }}\n        ></div>\n        <div className=\"modal fade show\" style={{ display: \"block\" }}>\n          <div className={modalCls}>\n            <ModalContent {...modalProps} />\n          </div>\n        </div>\n      </>\n    );\n  }\n);\n","import React from \"react\";\nimport { connect } from \"redux-bundler-react\";\nimport { getNavHelper } from \"internal-nav-helper\";\nimport Modal from \"./modal\";\n\nconst Main = connect(\n  \"doUpdateUrl\",\n  \"selectRoute\",\n  ({ doUpdateUrl, route: Route }) => {\n    return (\n      <div onClick={getNavHelper(doUpdateUrl)}>\n        <Route />\n        <Modal />\n      </div>\n    );\n  }\n);\n\nexport default Main;\n","import React from \"react\";\nimport { Provider } from \"redux-bundler-react\";\nimport Main from \"./app-components/main\";\n\nclass App extends React.Component {\n  render() {\n    const { store } = this.props;\n    return (\n      <Provider store={store}>\n        <Main />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport getStore from \"./app-bundles\";\nimport cache from \"./utils/cache\";\n\nimport App from \"./App\";\n\nimport \"./css/bootstrap/css/bootstrap.cosmo.min.css\";\nimport \"./css/mdi/css/materialdesignicons.min.css\";\n\nimport \"./css/index.css\";\n\nwindow.localStorage.removeItem(\"debug\");\n// window.localStorage.setItem(\"debug\", true);\n\ncache.getAll().then((initialData) => {\n  const store = getStore(initialData);\n  window.store = store;\n  ReactDOM.render(<App store={store} />, document.getElementById(\"root\"));\n});\n"],"sourceRoot":""}